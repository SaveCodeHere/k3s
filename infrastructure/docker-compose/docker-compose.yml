services:



  # ----------------------------------------------------------------
  # CORE: PROXY & LOAD BALANCER
  # ----------------------------------------------------------------

  traefik:
    image: traefik:v3.4.3
    container_name: traefik
    restart: unless-stopped
    command:     
      - --configfile=/etc/traefik/traefik.yml
    ports:
      - "8080:8080" # For the dashboard
      - "8081:8081" # Alternative HTTP port
      - "8443:8443" # Alternative HTTPS port
      - "8880:8880" # Public HTTP (web, legacy)
      - "8444:8444" # Public HTTPS (websecure, legacy)
      - "80:80"     # Standard HTTP port for public domains
      - "443:443"   # Standard HTTPS port for public domains
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./configs/traefik/traefik.yml:/etc/traefik/traefik.yml:ro
      - ./configs/traefik/dynamic.yml:/etc/traefik/dynamic/dynamic.yml:ro
      - ./configs/traefik/routes.yml:/etc/traefik/dynamic/routes.yml:ro
      - ./configs/certs:/etc/traefik/certs:ro
      - /data/foundation/traefik/letsencrypt:/etc/traefik/acme
      
    networks:
      - foundation_network
    labels:
      - "traefik.enable=true"
      - "traefik.http.middlewares.admin-auth.basicauth.users=${ADMIN_USER_HASH}"
      - "traefik.http.middlewares.general-auth.basicauth.users=${GENERAL_USER_HASH}"
      
      # Traefik dashboard via alternative port
      - "traefik.http.routers.traefik-dashboard.rule=Host(`um.tail16ca22.ts.net`)"
      - "traefik.http.routers.traefik-dashboard.entrypoints=alt-websecure"
      - "traefik.http.routers.traefik-dashboard.service=api@internal"
      - "traefik.http.routers.traefik-dashboard.middlewares=admin-auth"
      
      # HTTPS Redirect Middleware
      - "traefik.http.middlewares.https-redirect.redirectscheme.scheme=https"
      - "traefik.http.middlewares.https-redirect.redirectscheme.permanent=true"
      
      - "traefik.http.services.traefik-dashboard.loadbalancer.server.port=8080"

  # ----------------------------------------------------------------
  # MANAGEMENT & UTILITIES
  # ----------------------------------------------------------------
  agent:
    image: portainer/agent:latest
    container_name: portainer-agent
    restart: unless-stopped
    environment:
      - AGENT_CLUSTER_ADDR=
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/docker/volumes:/var/lib/docker/volumes
    networks:
      - foundation_network

  portainer:
    image: portainer/portainer-ce:latest
    container_name: portainer
    restart: unless-stopped
    command: -H tcp://agent:9001 --tlsskipverify
    depends_on:
      - agent
    ports:
      - "9000:9000"
    volumes:
      - /data/foundation/portainer:/data
    networks:
      - foundation_network
    labels:
      - "traefik.enable=true"
      # Private (Tailscale) subdomain router
      - "traefik.http.routers.portainer-private.rule=Host(`portainer.um.tail16ca22.ts.net`) && PathPrefix(`/`)"
      - "traefik.http.routers.portainer-private.entrypoints=websecure"
      - "traefik.http.routers.portainer-private.service=portainer-svc"
      - "traefik.http.routers.portainer-private.middlewares=default-chain@file"
      - "traefik.http.routers.portainer-private.priority=10"
      # Private (Tailscale) path-based router
      - "traefik.http.routers.portainer-path.rule=Host(`um.tail16ca22.ts.net`) && PathPrefix(`/portainer`)"
      - "traefik.http.routers.portainer-path.entrypoints=websecure"
      - "traefik.http.routers.portainer-path.service=portainer-svc"
      - "traefik.http.routers.portainer-path.middlewares=default-chain@file,portainer-stripprefix,portainer-headers"
      - "traefik.http.routers.portainer-path.priority=100"
      # HTTP to HTTPS redirect for private subdomain
      - "traefik.http.routers.portainer-private-http.rule=Host(`portainer.um.tail16ca22.ts.net`)"
      - "traefik.http.routers.portainer-private-http.entrypoints=web"
      - "traefik.http.routers.portainer-private-http.middlewares=https-redirect@file"
      - "traefik.http.routers.portainer-private-http.service=portainer-svc"
      - "traefik.http.routers.portainer-private-http.priority=9000"
      # HTTP to HTTPS redirect for path-based
      - "traefik.http.routers.portainer-path-http.rule=Host(`um.tail16ca22.ts.net`) && PathPrefix(`/portainer`)"
      - "traefik.http.routers.portainer-path-http.entrypoints=web"
      - "traefik.http.routers.portainer-path-http.middlewares=https-redirect@file"
      - "traefik.http.routers.portainer-path-http.service=portainer-svc"
      - "traefik.http.routers.portainer-path-http.priority=9100"
      # Public (Cloudflare) router (optional, if you want public access)
      # - "traefik.http.routers.portainer-public.rule=Host(`portainer.nicstack.dev`) && PathPrefix(`/`)"
      # - "traefik.http.routers.portainer-public.entrypoints=websecure"
      # - "traefik.http.routers.portainer-public.service=portainer-svc"
      # - "traefik.http.routers.portainer-public.middlewares=default-chain@file"
      # - "traefik.http.routers.portainer-public.priority=20"
      # HTTP to HTTPS redirect for public (optional)
      # - "traefik.http.routers.portainer-public-http.rule=Host(`portainer.nicstack.dev`)"
      # - "traefik.http.routers.portainer-public-http.entrypoints=web"
      # - "traefik.http.routers.portainer-public-http.middlewares=https-redirect@file"
      # - "traefik.http.routers.portainer-public-http.service=portainer-svc"
      # - "traefik.http.routers.portainer-public-http.priority=9010"
      # Shared service definition
      - "traefik.http.services.portainer-svc.loadbalancer.server.port=9000"
      # Strip prefix middleware for path-based routing
      - "traefik.http.middlewares.portainer-stripprefix.stripprefix.prefixes=/portainer"
      # Add headers middleware for proper asset loading
      - "traefik.http.middlewares.portainer-headers.headers.customrequestheaders.X-Forwarded-Prefix=/portainer"

  pihole:
    image: pihole/pihole:latest
    container_name: pihole
    restart: unless-stopped
    ports:
      - "53:53/tcp"
      - "53:53/udp"
      - "8053:80"
      
    cap_add:
      - NET_ADMIN
      - SYS_TIME
    environment:
      - TZ=Europe/Copenhagen
      - WEBPASSWORD=${PIHOLE_PASSWORD}
      - INTERFACE=eth0
      - DNSMASQ_LISTENING=all   
    volumes:
      - /data/foundation/pihole/etc:/etc/pihole
      - /data/foundation/pihole/dnsmasq:/etc/dnsmasq.d
    networks:
      - foundation_network
    labels:
      - "traefik.enable=true"
      # Private (Tailscale) subdomain router
      - "traefik.http.routers.pihole-private.rule=Host(`pihole.um.tail16ca22.ts.net`) && PathPrefix(`/`)"
      - "traefik.http.routers.pihole-private.entrypoints=websecure"
      - "traefik.http.routers.pihole-private.service=pihole-svc"
      - "traefik.http.routers.pihole-private.middlewares=default-chain@file"
      - "traefik.http.routers.pihole-private.priority=10"
      # Private (Tailscale) path-based router
      - "traefik.http.routers.pihole-path.rule=Host(`um.tail16ca22.ts.net`) && PathPrefix(`/pihole`)"
      - "traefik.http.routers.pihole-path.entrypoints=websecure"
      - "traefik.http.routers.pihole-path.service=pihole-svc"
      - "traefik.http.routers.pihole-path.middlewares=default-chain@file,pihole-stripprefix,pihole-headers"
      - "traefik.http.routers.pihole-path.priority=100"
      # HTTP to HTTPS redirect for private subdomain
      - "traefik.http.routers.pihole-private-http.rule=Host(`pihole.um.tail16ca22.ts.net`)"
      - "traefik.http.routers.pihole-private-http.entrypoints=web"
      - "traefik.http.routers.pihole-private-http.middlewares=https-redirect@file"
      - "traefik.http.routers.pihole-private-http.service=pihole-svc"
      - "traefik.http.routers.pihole-private-http.priority=9000"
      # HTTP to HTTPS redirect for path-based
      - "traefik.http.routers.pihole-path-http.rule=Host(`um.tail16ca22.ts.net`) && PathPrefix(`/pihole`)"
      - "traefik.http.routers.pihole-path-http.entrypoints=web"
      - "traefik.http.routers.pihole-path-http.middlewares=https-redirect@file"
      - "traefik.http.routers.pihole-path-http.service=pihole-svc"
      - "traefik.http.routers.pihole-path-http.priority=9100"
      # Public (Cloudflare) router (optional, if you want public access)
      # - "traefik.http.routers.pihole-public.rule=Host(`pihole.nicstack.dev`) && PathPrefix(`/`)"
      # - "traefik.http.routers.pihole-public.entrypoints=websecure"
      # - "traefik.http.routers.pihole-public.service=pihole-svc"
      # - "traefik.http.routers.pihole-public.middlewares=default-chain@file"
      # - "traefik.http.routers.pihole-public.priority=20"
      # HTTP to HTTPS redirect for public (optional)
      # - "traefik.http.routers.pihole-public-http.rule=Host(`pihole.nicstack.dev`)"
      # - "traefik.http.routers.pihole-public-http.entrypoints=web"
      # - "traefik.http.routers.pihole-public-http.middlewares=https-redirect@file"
      # - "traefik.http.routers.pihole-public-http.service=pihole-svc"
      # - "traefik.http.routers.pihole-public-http.priority=9010"
      # Shared service definition
      - "traefik.http.services.pihole-svc.loadbalancer.server.port=80"
      # Strip prefix middleware for path-based routing
      - "traefik.http.middlewares.pihole-stripprefix.stripprefix.prefixes=/pihole"
      # Add headers middleware for proper asset loading
      - "traefik.http.middlewares.pihole-headers.headers.customrequestheaders.X-Forwarded-Prefix=/pihole"

  # ----------------------------------------------------------------
  # CRITICAL INFRASTRUCTURE: SECRETS & REGISTRY
  # ----------------------------------------------------------------
  vault:
    image: hashicorp/vault:1.16
    container_name: vault
    restart: unless-stopped
    command: vault server -config=/vault/config/vault.hcl
    ports:
      - "8200:8200/tcp"
    environment:
      - VAULT_ADDR=http://0.0.0.0:8200
      - VAULT_internal_CONFIG={"storage":{"file":{"path":"/vault/data"}},"listener":{"tcp":{"address":"0.0.0.0:8200","tls_disable":true}},"ui":true,"log_level":"INFO"}
    cap_add:
      - IPC_LOCK
    volumes:
      - ./configs/vault:/vault/config
      - /data/foundation/vault/data:/vault/data
      - /data/foundation/vault/logs:/vault/logs
    networks:
      - foundation_network
    labels:
      - "traefik.enable=true"
      # Private (Tailscale) subdomain router
      - "traefik.http.routers.vault-private.rule=Host(`vault.um.tail16ca22.ts.net`) && PathPrefix(`/`)"
      - "traefik.http.routers.vault-private.entrypoints=websecure"
      - "traefik.http.routers.vault-private.service=vault-svc"
      - "traefik.http.routers.vault-private.middlewares=default-chain@file"
      - "traefik.http.routers.vault-private.priority=10"
      # Private (Tailscale) path-based router
      - "traefik.http.routers.vault-path.rule=Host(`um.tail16ca22.ts.net`) && PathPrefix(`/vault`)"
      - "traefik.http.routers.vault-path.entrypoints=websecure"
      - "traefik.http.routers.vault-path.service=vault-svc"
      - "traefik.http.routers.vault-path.middlewares=default-chain@file,vault-stripprefix,vault-headers"
      - "traefik.http.routers.vault-path.priority=100"
      # HTTP to HTTPS redirect for private subdomain
      - "traefik.http.routers.vault-private-http.rule=Host(`vault.um.tail16ca22.ts.net`)"
      - "traefik.http.routers.vault-private-http.entrypoints=web"
      - "traefik.http.routers.vault-private-http.middlewares=https-redirect@file"
      - "traefik.http.routers.vault-private-http.service=vault-svc"
      - "traefik.http.routers.vault-private-http.priority=9000"
      # HTTP to HTTPS redirect for path-based
      - "traefik.http.routers.vault-path-http.rule=Host(`um.tail16ca22.ts.net`) && PathPrefix(`/vault`)"
      - "traefik.http.routers.vault-path-http.entrypoints=web"
      - "traefik.http.routers.vault-path-http.middlewares=https-redirect@file"
      - "traefik.http.routers.vault-path-http.service=vault-svc"
      - "traefik.http.routers.vault-path-http.priority=9100"
      # Public (Cloudflare) router (optional, if you want public access)
      # - "traefik.http.routers.vault-public.rule=Host(`vault.nicstack.dev`) && PathPrefix(`/`)"
      # - "traefik.http.routers.vault-public.entrypoints=websecure"
      # - "traefik.http.routers.vault-public.service=vault-svc"
      # - "traefik.http.routers.vault-public.middlewares=default-chain@file"
      # - "traefik.http.routers.vault-public.priority=20"
      # HTTP to HTTPS redirect for public (optional)
      # - "traefik.http.routers.vault-public-http.rule=Host(`vault.nicstack.dev`)"
      # - "traefik.http.routers.vault-public-http.entrypoints=web"
      # - "traefik.http.routers.vault-public-http.middlewares=https-redirect@file"
      # - "traefik.http.routers.vault-public-http.service=vault-svc"
      # - "traefik.http.routers.vault-public-http.priority=9010"
      # Shared service definition
      - "traefik.http.services.vault-svc.loadbalancer.server.port=8200"
      # Strip prefix middleware for path-based routing
      - "traefik.http.middlewares.vault-stripprefix.stripprefix.prefixes=/vault"
      # Add headers middleware for proper asset loading
      - "traefik.http.middlewares.vault-headers.headers.customrequestheaders.X-Forwarded-Prefix=/vault"

  # ----------------------------------------------------------------
  # WEB SERVICES
  # ----------------------------------------------------------------
  landing-page:
    image: nginx:alpine
    container_name: landing-page
    restart: unless-stopped
    ports:
      - "8082:80"
    # No need to expose 80/443 here; Traefik will handle public access
    volumes:
      - ./configs/landing-page/index.html:/usr/share/nginx/html/index.html:ro
      - ./configs/landing-page/nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - ./configs/landing-page/app.js:/usr/share/nginx/html/app.js:ro
      - ./configs/landing-page/config.json:/usr/share/nginx/html/config.json:ro
      - ./configs/landing-page/services.json:/usr/share/nginx/html/services.json:ro
    networks:
      - foundation_network
    labels:
      - "traefik.enable=true"
      # Private (Tailscale) router
      - "traefik.http.routers.landing-page-private.rule=Host(`um.tail16ca22.ts.net`) && PathPrefix(`/`)"
      - "traefik.http.routers.landing-page-private.entrypoints=websecure"
      - "traefik.http.routers.landing-page-private.service=landing-page-svc"
      - "traefik.http.routers.landing-page-private.middlewares=default-chain@file"
      - "traefik.http.routers.landing-page-private.priority=10"
      # HTTP to HTTPS redirect for private
      - "traefik.http.routers.landing-page-private-http.rule=Host(`um.tail16ca22.ts.net`)"
      - "traefik.http.routers.landing-page-private-http.entrypoints=web"
      - "traefik.http.routers.landing-page-private-http.middlewares=https-redirect@file"
      - "traefik.http.routers.landing-page-private-http.service=landing-page-svc"
      - "traefik.http.routers.landing-page-private-http.priority=9000"
      # Public (Cloudflare) router
      - "traefik.http.routers.landing-page-public.rule=Host(`landing.nicstack.dev`) && PathPrefix(`/`)"
      - "traefik.http.routers.landing-page-public.entrypoints=websecure"
      - "traefik.http.routers.landing-page-public.service=landing-page-svc"
      - "traefik.http.routers.landing-page-public.middlewares=default-chain@file"
      - "traefik.http.routers.landing-page-public.priority=20"
      - "traefik.http.routers.landing-page-public.tls.certresolver=letsencrypt"
      # HTTP to HTTPS redirect for public
      - "traefik.http.routers.landing-page-public-http.rule=Host(`landing.nicstack.dev`)"
      - "traefik.http.routers.landing-page-public-http.entrypoints=web"
      - "traefik.http.routers.landing-page-public-http.middlewares=https-redirect@file"
      - "traefik.http.routers.landing-page-public-http.service=landing-page-svc"
      - "traefik.http.routers.landing-page-public-http.priority=9010"
      # Shared service definition
      - "traefik.http.services.landing-page-svc.loadbalancer.server.port=80"

  # Rancher Proxy - REMOVED - Using direct port-forward instead
  # rancher-proxy:
  #   image: nginx:alpine
  #   container_name: rancher-proxy
  #   restart: unless-stopped
  #   ports:
  #     - "8890:80"  # Expose directly on localhost for testing
  #   networks:
  #     - foundation_network
  #   volumes:
  #     - ./configs/rancher/nginx.conf:/etc/nginx/nginx.conf:ro
  #   labels:
  #     - "traefik.enable=true"
  #     # Private (Tailscale) router for Rancher
  #     - "traefik.http.routers.rancher-private.rule=Host(`um.tail16ca22.ts.net`) && PathPrefix(`/rancher`)"
  #     - "traefik.http.routers.rancher-private.entrypoints=websecure"
  #     - "traefik.http.routers.rancher-private.service=rancher-svc"
  #     - "traefik.http.routers.rancher-private.middlewares=default-chain@file"
  #     - "traefik.http.routers.rancher-private.priority=15"
  #     # HTTP to HTTPS redirect for Rancher
  #     - "traefik.http.routers.rancher-private-http.rule=Host(`um.tail16ca22.ts.net`) && PathPrefix(`/rancher`)"
  #     - "traefik.http.routers.rancher-private-http.entrypoints=web"
  #     - "traefik.http.routers.rancher-private-http.middlewares=https-redirect@file"
  #     - "traefik.http.routers.rancher-private-http.service=rancher-svc"
  #     - "traefik.http.routers.rancher-private-http.priority=9015"
  #     # Rancher service definition
  #     - "traefik.http.services.rancher-svc.loadbalancer.server.port=80"

networks:
  foundation_network:
    name: foundation_network
    driver: bridge