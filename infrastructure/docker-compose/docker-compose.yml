services:
  # Single Traefik handling both public and private routing
  # traefik:
  #   image: traefik:v3.4.3
  #   container_name: traefik
  #   restart: unless-stopped

  #   ports:
  #     - "80:80"     # Public HTTP (redirects to HTTPS)
  #     - "443:443"   # Public/Private HTTPS
  #     - "8080:8080" # Dashboard
  #   environment:
  #     - TZ=Europe/Copenhagen
  #     - CF_DNS_API_TOKEN=${CF_DNS_API_TOKEN}

  #   networks:
  #     - infra_network
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock:ro
  #     - /data/foundation/traefik/letsencrypt:/certs
  #   command:
  #     - --providers.docker=true
  #     - --providers.docker.exposedByDefault=false
  #     - --providers.docker.network=infra_network
  #     - --api.dashboard=true
  #     - --api.insecure=true
  #     - --certificatesresolvers.letsencrypt.acme.dnschallenge=true
  #     - --certificatesresolvers.letsencrypt.acme.dnschallenge.provider=cloudflare
  #     - --certificatesresolvers.letsencrypt.acme.dnschallenge.delaybeforecheck=20
  #     - --certificatesresolvers.letsencrypt.acme.storage=/certs/acme.json
  #     - --entrypoints.web.address=:80
  #     - --entrypoints.web.http.redirections.entrypoint.to=websecure
  #     - --entrypoints.web.http.redirections.entrypoint.scheme=https
  #     - --entrypoints.websecure.address=:443
  #     - --entrypoints.websecure.http.tls=true

  # Landing page service with public access via Traefik
  landing-page:
    image: nginx:alpine
    container_name: landing-page
    restart: unless-stopped
    volumes:
      - ./configs/landing-page/index.html:/usr/share/nginx/html/index.html:ro
      - ./configs/landing-page/nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - ./configs/landing-page/app.js:/usr/share/nginx/html/app.js:ro
      - ./configs/landing-page/config.json:/usr/share/nginx/html/config.json:ro
      - ./configs/landing-page/services.json:/usr/share/nginx/html/services.json:ro

    networks:
      - infra_network

  # Portainer - private only via Tailscale
  portainer:
    image: portainer/portainer-ce:latest
    container_name: portainer
    restart: unless-stopped
    ports:
      - "9000:9000"  # Expose for Tailscale access
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /data/foundation/portainer:/data
    networks:
      - infra_network

  # Pi-hole - private only via Tailscale
  pihole:
    image: pihole/pihole:latest
    container_name: pihole
    restart: unless-stopped
    ports:
      - "53:53/tcp"  # DNS TCP
      - "53:53/udp"  # DNS UDP
      - "8085:80"  # Web interface exposed for Tailscale
  
    environment:
      - TZ=Europe/Copenhagen
      - WEBPASSWORD=${PIHOLE_PASSWORD}
      - INTERFACE=eth0
      - DNSMASQ_LISTENING=all
    volumes:
      - ./configs/pi-hole/custom.conf:/etc/dnsmasq.d/custom.conf:ro
      - ./configs/pi-hole/tailscale-domains.conf:/etc/dnsmasq.d/tailscale-domains.conf:ro
      - /data/foundation/pihole/etc:/etc/pihole
      - /data/foundation/pihole/dnsmasq:/etc/dnsmasq.d
    cap_add:
      - NET_ADMIN
      - SYS_TIME
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.pihole-svc.loadbalancer.server.port=80"
    networks:
      - infra_network

  # Vault - private only via Tailscale
  vault:
    image: hashicorp/vault:1.16
    container_name: vault
    restart: unless-stopped
    ports:
      - "8200:8200"  # Vault API port exposed for Tailscale
    command: vault server -config=/vault/config/vault.hcl
    environment:
      - VAULT_ADDR=http://0.0.0.0:8200
    cap_add:
      - IPC_LOCK
    volumes:
      - ./configs/vault:/vault/config
      - /data/foundation/vault/data:/vault/data
      - /data/foundation/vault/logs:/vault/logs
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.vault-svc.loadbalancer.server.port=8200"
    networks:
      - infra_network




  # Homer - private dashboard for Tailscale access
  homer:
    image: b4bz/homer:latest
    container_name: homer
    restart: unless-stopped
    ports:
      - "8082:8080"  # Exposed for Tailscale access
    volumes:
      - ./configs/homer:/www/assets  # Place your config.yml and custom assets here
    networks:
      - infra_network

networks:
  infra_network:
    name: infra_network
    driver: bridge
